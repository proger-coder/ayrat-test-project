import { createClient } from 'redis';
import log from '../utils/logger';

const REDIS_URL = process.env.REDIS_URL || 'redis://localhost:6380';

export const redisClient = createClient({
  url: REDIS_URL,
});

redisClient.on('connect', () => {
  log.info('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ü§ùüèª');
});

redisClient.on('ready', () => {
  log.info('–ö–ª–∏–µ–Ω—Ç Redis –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.');
});

redisClient.on('error', (err) => {
  log.error('–û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ Redis: ' + err.message);
});

redisClient.on('end', () => {
  log.info('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Redis –∑–∞–∫—Ä—ã—Ç–æ.');
});

export async function connectRedis() {
  try {
    await redisClient.connect();
  } catch (err) {
    log.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Redis: ' + (err instanceof Error ? err.message : String(err)));
    throw err;
  }
}
